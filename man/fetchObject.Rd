% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetchObject.R
\name{fetchObject}
\alias{fetchObject}
\title{Fetch an object from the calcite backend}
\usage{
fetchObject(id, cache = TRUE, force.update = FALSE)
}
\arguments{
\item{id}{String containing the ArtifactDB identifier for the object of interest.}

\item{cache}{Logical scalar indicating whether caching should be performed.
If \code{TRUE}, a default cache location is chosen.

Alternatively, a string specifying the path to a cache directory.

Alternatively, a \linkS4class{BiocFileCache} object.}

\item{force.update}{Logical scalar indicating whether cache entries should be forcibly updated.
Useful for fixing corrupted or incomplete files in the cache.}
}
\value{
An R object corresponding to \code{id}.
}
\description{
Fetch an object from the calcite backend.
This involves caching its associated files before loading it into the current R session.
}
\examples{
cache.dir <- tempfile()
id <- "FOO:df1@BAR" # Using the example generated in saveObject

# First request downloads the resources:
obj <- fetchObject(id, cache=cache.dir)
obj

# Next query just uses the cache:
fetchObject(id, cache=cache.dir)

# All the annotation is attached:
str(objectAnnotation(obj))

}
\seealso{
\code{\link{saveObject}} and \code{\link{uploadDirectory}}, to save and upload objects to the calcite backend.
}
\author{
Aaron Lun
}
