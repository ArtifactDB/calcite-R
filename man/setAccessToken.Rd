% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setAccessToken.R
\name{setAccessToken}
\alias{setAccessToken}
\alias{accessTokenInfo}
\title{Get or set the GitHub access token}
\usage{
setAccessToken(token, cache = TRUE)

accessTokenInfo(prompt = interactive())
}
\arguments{
\item{token}{String containing a GitHub personal access token.
If missing, the user will be prompted to supply a token.
If \code{NULL}, any existing tokens are cleared.}

\item{cache}{Logical scalar indicating whether the token should be cached to file for re-use in other R sessions.
If \code{FALSE}, the token is only kept in memory for the current session.}

\item{prompt}{Logical scalar indicating whether the user should be prompted to supply token details if no cached token exists.}
}
\value{
For \code{setAccessToken}, any non-\code{NULL} \code{token} (or its interactively supplied counterpart) will be cached in memory and/or on file, depending on \code{cache}.
A list is invisibly returned containing details about the token including its value, the corresponding user account and the expiry time.
If \code{token=NULL}, any cached token is cleared from file and memory, and \code{NULL} is invisibly returned.

For \code{accessTokenInfo}, a list is returned containing the token details.
If \code{prompt=FALSE} and no cached token is present, \code{NULL} is returned.
}
\description{
Pretty much as the title says.
calcite uses GitHub for user authentication.
}
\examples{
\dontrun{setAccessToken()}

accessTokenInfo(FALSE)

}
\author{
Aaron Lun
}
