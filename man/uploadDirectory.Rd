% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uploadDirectory.R
\name{uploadDirectory}
\alias{uploadDirectory}
\title{Upload a staging directory to the calcite store}
\usage{
uploadDirectory(
  dir,
  project,
  version,
  owners = NULL,
  viewers = NULL,
  public = TRUE,
  expires = NULL,
  collapse.md5.duplicates = TRUE
)
}
\arguments{
\item{dir}{String containing a path to a staging directory.}

\item{project}{String containing the name of the project.}

\item{version}{String containing the version of the project.}

\item{owners}{Character vector of GitHub user names of project owners.
Defaults to the currently authenticated user from \code{\link{setAccessToken}}.}

\item{viewers}{Character vector of GitHub user names of allowed viewers.}

\item{public}{Logical scalar indicating whether the project should be public.}

\item{expires}{Integer scalar specifying the expiry date for this version of the project.
If \code{NULL}, the uploaded version will not expire.}

\item{collapse.md5.duplicates}{Logical scalar indicating whether duplicated files with the same MD5 checksum should be collapsed.}
}
\value{
\code{NULL} is invisibly returned on success.
}
\description{
Upload a staging directory to the calcite backend.
The directory should contain objects saved with \code{\link{saveObject}}.
}
\examples{
tmp <- tempfile()
dir.create(tmp)

# Saving multiple objects to a directory.
df <- exampleObject()
saveObject(df, tmp, "my_first_df")

df2 <- exampleObject()
saveObject(df, tmp, "a_second_df")

# Uploading it to the backend (requires authentication):
\dontrun{uploadDirectory(tmp, "FOO", "BAR", expires=1)}

}
\seealso{
\code{\link{saveObject}}, to save objects to the staging directory.

\code{\link{fetchObject}}, to fetch an object from the calcite backend.
}
\author{
Aaron Lun
}
